#summary pyftpdlib development roadmap.
#labels Featured,SortOrder-3
= Releases roadmap =

== 0.3.0 _(upcoming one)_ ==

 * ~~Extend the set of assignable user permissions.~~
 * ~~Implement MLST and MLSD commands defined in [http://www.ietf.org/rfc/rfc3659.txt RFC-3659].~~
 * ~~Implement FEAT and OPTS commands defined in [http://www.faqs.org/rfcs/rfc2389.html RFC 2389].~~
 * ~~Use iterators for calculating requests requiring long time to complete (LIST and MLSD commands).~~
 * ~~Provide real permissions, owner, and group for files on UNIX platforms processing the LIST command.~~
 
== 0.2.0 _(current release)_ ==

Major enhancements:
 * ~~Support for FXP, site-to-site transfers.~~
 * ~~NAT/Firewall support with PASV (passive) mode connections.~~
 * ~~Configurable range of ports to use for passive data transfers.~~
 * ~~Per-user messages configurability.~~
 * ~~Maximum connections limit.~~
 * ~~Per-source-IP limits.~~
 * ~~Maximum login attempts limit.~~

RFCs enhancements:
 * ~~Understand also TYPE AN and TYPE L8 commands.~~
 * ~~Change account when USER is provided a second time after authenticating.~~
 * ~~Be compliant with STOU format output as defined in [http://www.faqs.org/rfcs/rfc1123.html RFC 1123].~~
 * ~~Accept HELP command arguments.~~
 * ~~Return directory listing over the command channel when STAT is called with an argument.~~

Security enhancements:
 * ~~Stop buffering when extremely long lines are received.~~
 * ~~Rejecting data connection when a privileged port is specified on PORT command.~~

== 0.1.1 _(released)_==

 * ~~Randomize PASV port selection.~~
 * ~~Release pyftpdlib under a license the most freely possible (MIT).~~ 

== 0.1.0 _(released)_ ==

 * ~~Create an asynchronous FTP server library compliant with [http://www.faqs.org/rfcs/rfc959.html RFC 959].~~

= Proposals for future =

_(?) == considering_

 * SSL / TLS support including _AUTH, ADAT, PROT, PBSZ, CCC, MIC, CONF_ and _ENC_ commands as defined in [http://www.faqs.org/rfcs/rfc2228.html RFC 2228].
 * IPv6 support including _EPRT & EPSV_ commands as defined in [http://www.faqs.org/rfcs/rfc2428.html RFC 2428].
 * Support for _LANG_ command as defined in [http://www.faqs.org/rfcs/rfc2640.html RFC 2640].
 * Include a graphical Tk-based ftp server into demo directory.
 * _(?)_ Assume the id of a particular user via os.fork, os.setuid or similar when using system-dependent authorizers.
 * _(?)_ Switch from asyncore to Twisted. *_NEW_*
 * _(?)_ Include idle-timeout capabilities. *_NEW_*
 * _(?)_ Include bandwidth throttling capabilities straight into the library instead of providing it via demo script. *_NEW_*
 * _(?)_ Use Python generators when doing resource-intensive blocking operations like calculating LIST and MLSD command outputs. *_NEW_*
 * _(?)_ Extend the current DummyAuthorizer for supporting more specific permissions aside from the generical "read" and "write" (e.g. create/remove/rename/list/change directory, append to existing file and so on...)

= Hosting roadmap =

 * ~~Set up a subversion repository.~~
 * ~~Provide a mailing list for pyftpdlib users.~~
 * ~~Provide a mailing list for subversion commits.~~
 * ~~Provide a mailing list for issue changes.~~

= Wiki roadmap =

 * ~~Provide a [http://code.google.com/p/pyftpdlib/wiki/Roadmap Roadmap] wiki defining project milestones.~~
 * ~~Provide a [http://code.google.com/p/pyftpdlib/wiki/Tutorial Tutorial] wiki documenting module itself.~~
 * ~~Provide a [http://code.google.com/p/pyftpdlib/wiki/FAQ FAQ] wiki.~~
 * ~~Provide an [http://code.google.com/p/pyftpdlib/wiki/Adoptions Adoptions] wiki listing all products we're aware of that uses pyftpdlib.~~
 * ~~Provide a [http://code.google.com/p/pyftpdlib/wiki/RFCsCompliance RFCsCompliance] wiki showing pyftpdlib compliance against FTP protocol standard RFCs.~~ *_NEW_*