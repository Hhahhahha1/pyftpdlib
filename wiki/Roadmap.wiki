#summary pyftpdlib development roadmap
#labels Featured,SortOrder-3
= Releases roadmap =

== 0.1.0 _(released)_ ==

 * ~~Create an asynchronous FTP server library compliant with [http://www.faqs.org/rfcs/rfc959.html RFC 959].~~
 
== 0.1.1 _(released)_==

 * ~~Randomize PASV port selection.~~
 * ~~Release pyftpdlib under a license the most freely possible (MIT).~~ 

== 0.2.0 _(current release)_ ==

Major enhancements:
 * ~~Support for FXP, site-to-site transfers.~~
 * ~~NAT/Firewall support with PASV (passive) mode connections.~~
 * ~~Configurable range of ports to use for passive data transfers.~~
 * ~~Per-user messages configurability.~~
 * ~~Maximum connections limit.~~
 * ~~Per-source-IP limits.~~
 * ~~Maximum login attempts limit.~~

RFCs enhancements:
 * ~~Understand also TYPE AN and TYPE L8 commands.~~
 * ~~Change account when USER is provided a second time after authenticating.~~
 * ~~Be compliant with STOU format output as defined in [http://www.faqs.org/rfcs/rfc1123.html RFC 1123].~~
 * ~~Accept HELP command arguments.~~
 * ~~Return directory listing over the command channel when STAT is called with an argument.~~

Security enhancements:
 * ~~Stop buffering when extremely long lines are received.~~
 * ~~Rejecting data connection when a privileged port is specified on PORT command.~~

== 0.2.1 ==

 * ~~Implement FEAT command as defined in [http://www.faqs.org/rfcs/rfc2389.html RFC 2389].~~
 * Add a new variable to easily modify server identifier.

== Future ==

 * SSL / TLS support including _AUTH, ADAT, PROT, PBSZ, CCC, MIC, CONF_ and _ENC_ commands as defined in [http://www.faqs.org/rfcs/rfc2228.html RFC 2228].
 * IPv6 support including _EPRT & EPSV_ commands as defined in [http://www.faqs.org/rfcs/rfc2428.html RFC 2428].
 * Support for _LANG_ command as defined in [http://www.faqs.org/rfcs/rfc2640.html RFC 2640].
 * Implement MLSD, MLST_ commands as defined in [http://www.faqs.org/rfcs/rfc3659.html RFC 3659].
 * Implement _OPTS_ command as defined in [http://www.faqs.org/rfcs/rfc2389.html RFC 2389].
 * Include a graphical Tk-based ftp server into demo directory.
 * _(optional)_ Assume the id of a particular user via os.fork, os.setuid or similar when using system-dependent authorizers.

= Hosting roadmap =

 * ~~Set up a subversion repository.~~
 * ~~Provide a mailing list for pyftpdlib users.~~
 * ~~Provide a mailing list for subversion commits.~~
 * ~~Provide a mailing list for issue changes.~~

= Wiki roadmap =

 * ~~Provide a _"Roadmap"_ wiki defining project milestones.~~
 * ~~Provide a _"Tutorial"_ wiki documenting module itself.~~
 * ~~Provide a _"FAQ"_ wiki.~~
 * ~~Provide an _"Adoptions"_ wiki listing all products we're aware of
that uses pyftpdlib.~~
 

 
 
 
 
 
 
 
 